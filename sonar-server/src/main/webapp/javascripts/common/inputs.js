// Generated by CoffeeScript 1.6.3
(function() {
  var $;

  $ = jQuery;

  $(function() {
    var convertValue, convertWorkDuration, originalVal, restoreValue, restoreWorkDuration, transformPattern;
    transformPattern = function(pattern) {
      return pattern.replace(/\{0\}/g, '(\\d+)');
    };
    convertWorkDuration = function(value) {
      var days, daysPattern, hours, hoursPattern, minutes, minutesPattern;
      daysPattern = transformPattern(window.SS.workDuration.days);
      hoursPattern = transformPattern(window.SS.workDuration.hours);
      minutesPattern = transformPattern(window.SS.workDuration.minutes);
      days = value.match(daysPattern);
      hours = value.match(hoursPattern);
      minutes = value.match(minutesPattern);
      days = days ? +days[1] : 0;
      hours = hours ? +hours[1] : 0;
      minutes = minutes ? +minutes[1] : 0;
      if (value && value.length > 0 && days === 0 && hours === 0 && minutes === 0) {
        return value;
      } else {
        return (days * 8 + hours) * 60 + minutes;
      }
    };
    restoreWorkDuration = function(value) {
      var days, hours, minutes, result;
      days = Math.floor(value / (8 * 60));
      hours = Math.floor((value - days * 8 * 60) / 60);
      minutes = value % 60;
      result = [];
      if (days > 0) {
        result.push(window.SS.workDuration.days.replace('{0}', days));
      }
      if (hours > 0) {
        result.push(window.SS.workDuration.hours.replace('{0}', hours));
      }
      if (minutes > 0) {
        result.push(window.SS.workDuration.minutes.replace('{0}', minutes));
      }
      return result.join(' ');
    };
    convertValue = function(value, input) {
      var type;
      type = input.data('type');
      if (type == null) {
        return value;
      }
      switch (type) {
        case 'WORK_DUR':
          return convertWorkDuration(value);
        default:
          return value;
      }
    };
    restoreValue = function(value, input) {
      var type;
      type = input.data('type');
      if (type == null) {
        return value;
      }
      switch (type) {
        case 'WORK_DUR':
          return restoreWorkDuration(value);
        default:
          return value;
      }
    };
    originalVal = $.fn.val;
    $.fn.val = function(value) {
      if (arguments.length) {
        return originalVal.call(this, restoreValue(value, this));
      } else {
        return convertValue(originalVal.call(this), this);
      }
    };
    return $.fn.originalVal = originalVal;
  });

}).call(this);
