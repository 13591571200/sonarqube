// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['navigator/filters/ajax-select-filters'], function(AjaxSelectFilters) {
    var QualityProfileFilterView, QualityProfileSuggestions, _ref, _ref1;
    QualityProfileSuggestions = (function(_super) {
      __extends(QualityProfileSuggestions, _super);

      function QualityProfileSuggestions() {
        _ref = QualityProfileSuggestions.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      QualityProfileSuggestions.prototype.url = function() {
        return "" + baseUrl + "/api/qualityprofiles/list";
      };

      return QualityProfileSuggestions;

    })(AjaxSelectFilters.Suggestions);
    return QualityProfileFilterView = (function(_super) {
      __extends(QualityProfileFilterView, _super);

      function QualityProfileFilterView() {
        _ref1 = QualityProfileFilterView.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      QualityProfileFilterView.prototype.initialize = function() {
        QualityProfileFilterView.__super__.initialize.apply(this, arguments);
        this.choices = new QualityProfileSuggestions;
        return this.listenTo(this.model, 'change:value', this.updateParentQualityProfile);
      };

      QualityProfileFilterView.prototype.updateParentQualityProfile = function() {
        var selected;
        selected = this.getSelected();
        if (selected.length === 1) {
          return this.model.set('parentQualityProfile', selected[0].get('parent'));
        } else {
          return this.model.unset('parentQualityProfile');
        }
      };

      return QualityProfileFilterView;

    })(AjaxSelectFilters.AjaxSelectFilterView);
  });

}).call(this);
