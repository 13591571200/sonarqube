<%
   issue_query = @issue_filter_result.query
   issues_result = @issue_filter_result.result

   issues = issues_result.issues
   max_page_size_reached = issues_result.issues.size >= issues_result.paging.pageSize()
   component_key = issue_query.components.to_a.first if issue_query.components and issue_query.components.size == 1
   project_key = issue_query.componentRoots.to_a.first if issue_query.componentRoots and issue_query.componentRoots.size == 1
   if params[:from] == 'drilldown' && !project_key
     project_key = Project.by_key(component_key).root_project.kee
   end

   transitions_by_issues = {}
   unresolved_issues = 0
   issues.each do |issue|
     transitions = Internal.issues.listTransitions(issue)
     transitions.each do |transition|
       issues_for_transition = transitions_by_issues[transition.key] || 0
       issues_for_transition += 1
       transitions_by_issues[transition.key] = issues_for_transition
     end
     unresolved_issues += 1 unless issue.resolution()
   end
%>
<form id="bulk-change-form" method="post" action="<%= ApplicationController.root_context -%>/issues/bulk_change">
  <input type="hidden" name="issues" value="<%= issues.map { |issue| issue.key() }.join(',') -%>">
  <input type="hidden" name="criteria_params" value="<%= params.to_query -%>">
  <input type="hidden" name="actions[]" id="bulk-change-transition-action">
  <fieldset>
    <div class="modal-head">
      <h2><%= message('issue_bulk_change.form.title', {:params => issues.size.to_s}) -%></h2>
    </div>
    <div class="modal-body">
      <div>
      <% if max_page_size_reached %>
        <p class="notes"><%= message('issue_bulk_change.max_issues_reached', :params => issues.size) -%></p>
      <% end %>
      </div>
      <div class="bulk-change errors error" style="display:none;"/>

      <% if unresolved_issues > 0 %>
      <div class="modal-field">
        <label for="assignee">
          <%= message('issue.assign.formlink') -%>
        </label>
        <input id="assign-action" name="actions[]" type="checkbox" value="assign"/>
        <%= user_select_tag('assign.assignee', :html_id => 'assignee', :open => false, :selected_user => current_user,
                            :include_choices => {'' => escape_javascript(message('unassigned')), current_user.login => escape_javascript(message('assigned_to_me'))}) -%>
        <span style="float:right;">(<%= message('issue_bulk_change.x_issues', :params => unresolved_issues.to_s) -%>)</span>
      </div>
      <%
         if project_key && !project_key.blank?
           plans = Internal.issues.findOpenActionPlans(project_key)
           unless plans.empty?
             first_plan = plans[0]
             options = plans.map { |plan|
               if plan.deadLine
                 label = "#{h plan.name} (#{format_date(plan.deadLine)})"
               else
                 label = h plan.name
               end
               [label, plan.key]
             }
             options.unshift([escape_javascript(message('issue.unplan.submit')), ''])
             plan_options = options_for_select(options, first_plan.key)
      %>
        <div class="modal-field">
          <label for="plan">
            <%= message('issue.do_plan') -%>
          </label>
          <input id="plan-action" name="actions[]" type="checkbox" value="plan"/>
          <%= dropdown_tag('plan.plan', plan_options, {:show_search_box => false}, {:id => 'plan'}) -%>
          <span style="float:right;">(<%= message('issue_bulk_change.x_issues', :params => unresolved_issues.to_s) -%>)</span>
        </div>
        <% end %>
      <% end %>
      <div class="modal-field">
        <label for="severity">
          <%= message('issue.set_severity') -%>
        </label>
        <input id="set-severity-action" name="actions[]" type="checkbox" value="set_severity"/>
        <%= severity_dropdown_tag('set_severity.severity', severitiy_select_option_tags, {:show_search_box => false},
                         {:id => 'severity'}) -%>
        <span style="float:right;">(<%= message('issue_bulk_change.x_issues', :params => unresolved_issues.to_s) -%>)</span>
      </div>
      <% end %>

      <% if transitions_by_issues.size > 0 %>
      <div class="modal-field">
        <label>
          <%= message('issue.transition') -%>
        </label>
        <% transitions_by_issues.keys.each do |transition| %>
          <input type="radio" name="do_transition.transition" value="<%= transition -%>"
                 onClick="addTransitionAction();">&nbsp;<%= message("issue.transition.#{transition}") -%>
          <span style="float:right;">(<%= message('issue_bulk_change.x_issues', :params => transitions_by_issues[transition].to_s) %>)</span><br/>
      <% end %>
      </div>
      <% end %>

      <div class="modal-field">
        <label>
          <%= message('issue.comment.formlink') -%>
        </label>
        <div style="padding: 0 10px 10px 0;">
          <div>
            <textarea rows="4" name="comment" style="width: 100%" autofocus="autofocus"></textarea>
          </div>
          <div style="float:right">
            <%= render :partial => 'markdown/tips' -%>
          </div>
        </div>
      </div>
    </div>
    <div class="modal-foot">
      <span id="bulk-change-loading-image" class="hidden"><%= image_tag 'loading.gif' %></span>
      <input type="submit" value="<%= message('apply') -%>" id="bulk-change-submit" class="bulk-change" onclick="return displayLoadingImage()" />
      <a href="#" onclick="return closeModalWindow()" id="bulk-change-cancel"><%= message('cancel') -%></a>
    </div>
  </fieldset>
</form>
<script>
  $j("#bulk-change-form").modalForm({
    success: function (data) {
      <% if params[:from] == 'issue_filters' %>
        window.location = baseUrl + '/issues/search?' + data;
      <% elsif params[:from] == 'drilldown' %>
        d('<%= component_key %>');
        closeModalWindow();
      <% else %>
        alert('Unknown origin : <%= params[:from] %>');
      <% end %>
    },
    error: function (xhr, textStatus, errorThrown) {
      $j('#bulk-change-loading-image').addClass("hidden");
      var htmlClass = 'bulk-change';
      $j('input[type=submit].' + htmlClass).removeAttr('disabled');
      $j('.' + htmlClass + '.errors').show();
      $j('.' + htmlClass + '.errors').html(xhr.responseText);
    }
  });

  function addTransitionAction() {
    $j('#bulk-change-transition-action').val("do_transition");
  }

  function displayLoadingImage() {
    $j('#bulk-change-loading-image').removeClass("hidden");
  }

  function check(id){
    $j('#'+ id).prop('checked', true);
  }

  /**
   * Attach some events on select boxes to automatically select associate check box when selecting an option
   */
  $j('#assignee').click(function() { check('assign-action'); });
  $j('#plan').click(function() { check('plan-action'); });
  $j('#severity').click(function() { check('set-severity-action'); });
</script>
