<div id="measure_filter_list<%= widget_id -%>">
<% content_for :script do %>
  <script>
    function refreshList<%= widget_id -%>(sort, asc, page) {
      $j('#measure_filter_foot<%= widget_id -%>_pages').hide();
      $j('#measure_filter_foot<%= widget_id -%>_loading').show();

      var url = decodeURI('<%= url_for filter.criteria.merge(:controller => 'measures', :action => 'search', :page => nil, :sort => nil, :asc => nil, :search => nil, :widget_id => widget_id, :trailing_slash => true) -%>');
      url += '&sort=' + sort + '&asc=' + asc + '&page=' + page;

      <% if widget_id %>
      $j('#measure_filter_list<%= widget_id -%>').load(url);
      <% else %>
      window.location = url;
      <% end %>
      return false;
    }
  </script>
<%
   end

   display_favourites = logged_in?
   colspan = filter.display.columns.size
   colspan += 1 if display_favourites
   table_columns = []
   table_columns << '' if display_favourites
   table_columns.concat(filter.display.columns.map { |c| c.key })
   if edit_mode
     content_for :script do
%>
    <script>
      var cols = [<%= table_columns.map{|col| "'#{col}'"}.join(',')-%>];

      function leftCol(id) {
        var cell = $j('#measures-table tr td[index=' + id + ']');
        var columnIndex = cell.parent().children().index(cell);
        if (columnIndex > 0) {
          moveCol(columnIndex - 1, columnIndex);
        }
      }
      function rightCol(id) {
        var cell = $j('#measures-table tr td[index=' + id + ']');
        var columnIndex = cell.parent().children().index(cell);
        if (columnIndex < cols.length - 1) {
          moveCol(columnIndex, columnIndex + 1);
        }
      }
      function moveCol(from, to) {
        var temp = cols[from];
        cols[from] = cols[to];
        cols[to] = temp;
        $j('#measures-table thead tr').each(function () {
          var tr = $j(this);
          var td1 = tr.find('th:eq(' + from + ')');
          var td2 = tr.find('th:eq(' + to + ')');
          td1.remove().insertAfter(td2);
        });
        $j('#measures-table tbody tr').each(function () {
          var tr = $j(this);
          var td1 = tr.find('td:eq(' + from + ')');
          var td2 = tr.find('td:eq(' + to + ')');
          td1.remove().insertAfter(td2);
        });
      }
      function deleteCol(id) {
        var cell = $j('#measures-table tr td[index=' + id + ']');
        var columnIndex = cell.parent().children().index(cell);
        cols.splice(columnIndex, 1);
        $j('#measures-table thead tr').each(function () {
          var tr = $j(this);
          var td1 = tr.find('th:eq(' + columnIndex + ')');
          td1.remove();
        });
        $j('#measures-table tbody tr').each(function () {
          var tr = $j(this);
          var td1 = tr.find('td:eq(' + columnIndex + ')');
          td1.remove();
        });
      }
      $j(document).ready(function () {
        $j("#select-metric").on("change", function (e) {
          var selectedKey = $j("#select-metric option:selected").val();
          if (selectedKey.indexOf('metric:') == 0) {
            if (selectedKey.indexOf('metric:new_') == 0) {
              $j('#select-period option :eq(0)').attr('disabled', 'disabled');
              $j('#select-period ').val('1');
            } else {
              $j('#select-period option :eq(0)').removeAttr('disabled');
              $j('#select-period').val('');
            }
            $j('#select-period').show();
          } else {
            $j('#select-period').hide();
          }
          $j("#add-metric").removeAttr('disabled');

        });
        $j("#add-metric").on("click", function (e) {
          var columnKey = $j("#select-metric option:selected").val();
          var period = $j("#select-period option:selected").val();
          if (period.length > 0) {
            columnKey += ':' + period;
          }
          cols.push(columnKey);
          window.location = removeUrlAttr(decodeURI(window.location.href), 'cols\\[\\]') + '&' + $j.map(cols,function (a) {
            return a ? 'cols[]=' + a : null;
          }).join('&');
        });
        $j("#exit-edit").on("click", function (e) {
          var url = removeUrlAttr(decodeURI(window.location.href), 'cols\\[\\]');
          url = removeUrlAttr(url, 'edit');
          url += '&' + $j.map(cols,function (a) {
            return a ? 'cols[]=' + a : null;
          }).join('&');
          window.location = url;
        });
      });
    </script>
  <%
     end
  %>
  <table class="spaced width100 box">
    <tr>
      <td>
        <%= metric_select_tag 'metric', Metric.all.reject { |m| m.hidden || m.data? },
                              :html_id => 'select-metric',
                              :allow_empty => true,
                              :key_prefix => 'metric:',
                              :extra_values => [[message('measure_filter.col.name'), 'name'], [message('measure_filter.col.short_name'), 'short_name'], [message('measure_filter.col.description'), 'description'], [message('measure_filter.col.language'), 'language'], [message('measure_filter.col.version'), 'version']] -%>
        <select id="select-period" style="display: none;">
          <option value="">Value</option>
          <% period_labels.each_with_index do |period_label, index| %>
            <option value="<%= index + 1 -%>"><%= period_label -%></option>
          <% end %>
        </select>

        <button id="add-metric"><%= message 'measure_filter.add_column_button' %></button>
      </td>
      <td class="right">
        <a href="#" class="button" id="exit-edit"><%= message 'close' -%></a>
        <% if filter.owner?(current_user) %>
          <a id="save-columns" href="<%= url_for params.merge({:action => 'save_form', :id => filter.id}) -%>" class="button open-modal"><%= message('save_and_close') -%></a>
        <% end %>
      </td>
    </tr>
  </table>
<%
   end
%>

<table class="data" id="measures-table">
  <thead>
  <tr valign="top">
    <% if display_favourites %>
      <th class="thin"></th>
    <% end %>
    <% filter.display.columns.each do |column| %>
      <%= list_column_html(filter, column, widget_id) -%>
    <% end %>
  </tr>
  </thead>
  <tbody>

  <% if edit_mode %>
    <tr class="bordered-bottom">
      <% if display_favourites %>
        <td></td>
      <% end %>
      <% filter.display.columns.each_with_index do |column, index| %>
        <td class="nowrap <%= column.align -%>" index="<%= index -%>">
          <a href="javascript:leftCol(<%= index -%>)" title="<%= h message('move_left') -%>" id="left-<%= column.key.parameterize -%>"><%= image_tag("controls/resultset_previous.png") -%></a>
          <a href="javascript:deleteCol(<%= index -%>)" title="<%= h message('measure_filter.delete_column') -%>" id="delete-<%= column.key.parameterize -%>"><%= image_tag("cross-gray.png") -%></a>
          <a href="javascript:rightCol(<%= index -%>)" title="<%= h message('move_right') -%>" id="right-<%= column.key.parameterize -%>"><%= image_tag("controls/resultset_next.png") -%></a>
        </td>
      <% end %>
  <% end %>

  <% if filter.base_row %>
    <tr class="highlight">
      <% if display_favourites %>
        <td class="thin"><%= link_to_favourite(filter.base_row.snapshot.resource) -%></td>
      <% end %>
      <% filter.display.columns.each do |column| %>
        <td class="<%= column.align -%> <%= column.row_css -%>">
          <%= list_cell_html(column, filter.base_row) -%>
        </td>
      <% end %>
    </tr>
  <% end %>

  <% filter.rows.each do |row| %>
    <tr class="<%= cycle 'even', 'odd' -%>">
      <% if display_favourites %>
        <td class="thin"><%= link_to_favourite(row.snapshot.resource) -%></td>
      <% end %>
      <% filter.display.columns.each do |column| %>
        <td class="<%= column.align -%> <%= column.row_css -%>">
          <%= list_cell_html(column, row) -%>
        </td>
      <% end %>
    </tr>
  <% end %>

  <% if filter.rows.empty? %>
    <tr class="even">
      <td colspan="<%= colspan -%>"><%= message 'no_data' -%></td>
    </tr>
  <% end %>

  </tbody>
  <% if widget_id %>
    <%= table_pagination(filter.pagination, :colspan => colspan, :id => "measure_filter_foot#{widget_id}", :include_loading_icon => true) { |label, page_id|
      link_to_function label, "refreshList#{widget_id}('#{filter.criteria[:sort]}', #{filter.criteria[:asc]}, #{page_id})"
    } -%>
  <% else %>
    <%= table_pagination(filter.pagination, :colspan => colspan, :id => "measure_filter_foot#{widget_id}", :include_loading_icon => true) { |label, page_id|
      link_to(label, filter.criteria.merge({:page => page_id}))
    } -%>
  <% end %>
</table>
</div>