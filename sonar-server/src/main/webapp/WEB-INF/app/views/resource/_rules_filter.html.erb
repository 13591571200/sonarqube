<%
  if @period
      blocker_violations = @snapshot.measure('new_blocker_violations')
	    critical_violations = @snapshot.measure('new_critical_violations')
	    major_violations = @snapshot.measure('new_major_violations')
	    minor_violations = @snapshot.measure('new_minor_violations')
	    info_violations = @snapshot.measure('new_info_violations')
	    violation_metric_key='new_violations'
	else
	  blocker_violations = @snapshot.measure('blocker_violations')
	    critical_violations = @snapshot.measure('critical_violations')
	    major_violations = @snapshot.measure('major_violations')
	    minor_violations = @snapshot.measure('minor_violations')
	    info_violations = @snapshot.measure('info_violations')
	    violation_metric_key='violations'
	end

   rule_counts={}
   rules=[]
   rule_measures=ProjectMeasure.find(:all, :include => 'rule', :conditions => ['metric_id=? AND snapshot_id=? AND rule_id IS NOT NULL AND characteristic_id IS NULL', Metric.by_key(violation_metric_key).id, @snapshot.id])
   rule_measures.each do |rule_measure|
     count=(@period ? rule_measure.variation(@period) : rule_measure.value)
     if count && count.to_i>0
      rule_counts[rule_measure.rule_id]=count.to_i
      rules<<rule_measure.rule
     end
   end

   rule_options=[]
   rules.uniq.sort_by{|rule| rule.name}.each do |rule|
     rule_options<<["#{h rule.name} (#{rule_counts[rule.id]})", rule.id]
   end
%>
<select id="rule" name="rule" onchange="applyOptions()">
  <option value="">All violations</option>
  <option value="f-positive" <%= 'selected' if params[:rule]=="f-positive" -%>>False-Positives only</option>
  <optgroup label="Severity">
    <% if blocker_violations
         value=(@period ? blocker_violations.variation(@period) : blocker_violations.value)
         if value && value>0
    %>
      <option value="<%= Sonar::RulePriority::BLOCKER.to_s -%>" <%= 'selected' if params[:rule]==Sonar::RulePriority::BLOCKER.to_s -%>>Blocker (<%= blocker_violations.format_numeric_value(value) -%>)</option>
    <%   end
    end %>

    <% if critical_violations
         value=(@period ? critical_violations.variation(@period) : critical_violations.value)
         if value && value>0
    %>
      <option value="<%= Sonar::RulePriority::CRITICAL.to_s -%>" <%= 'selected' if params[:rule]==Sonar::RulePriority::CRITICAL.to_s -%>>Critical (<%= critical_violations.format_numeric_value(value) -%>)</option>
    <%   end
       end
    %>
    
    <% if major_violations
         value=(@period ? major_violations.variation(@period) : major_violations.value)
         if value && value>0
    %>
      <option value="<%= Sonar::RulePriority::MAJOR.to_s -%>" <%= 'selected' if params[:rule]==Sonar::RulePriority::MAJOR.to_s -%>>Major (<%= major_violations.format_numeric_value(value) -%>)</option>
    <%   end
       end
    %>

    <% if minor_violations
         value=(@period ? minor_violations.variation(@period) : minor_violations.value)
         if value && value>0
    %>
      <option value="<%= Sonar::RulePriority::MINOR.to_s -%>" <%= 'selected' if params[:rule]==Sonar::RulePriority::MINOR.to_s -%>>Minor (<%= minor_violations.format_numeric_value(value) -%>)</option>
    <%   end
       end
    %>

    <% if info_violations
         value=(@period ? info_violations.variation(@period) : info_violations.value)
         if value && value>0
    %>
      <option value="<%= Sonar::RulePriority::INFO.to_s -%>" <%= 'selected' if params[:rule]==Sonar::RulePriority::INFO.to_s -%>>Info (<%= info_violations.format_numeric_value(value) -%>)</option>
    <%   end
       end
    %>

  </optgroup>


  <optgroup label="Rule">
    <%= options_for_select(rule_options, params[:rule].to_i) -%>
  </optgroup>
</select>