<script type="text/javascript">
  // show violation actions
  function sVA(violation_id) {
    var elt = $('vMsg' + violation_id);
    if (elt != null) {
      elt.hide();
    }
    elt = $('vActions' + violation_id);
    if (elt != null) {
      elt.show();
    }
    return false;
  }

  // hide violation actions
  function hVA(violation_id) {
    var elt = $('vMsg' + violation_id);
    if (elt != null) {
      elt.show();
    }
    elt = $('vActions' + violation_id);
    if (elt != null) {
      elt.hide();
    }
    return false;
  }

  // cancel action : hide form and refresh violation
  function cancelViolationAction(violation_id) {
    new Ajax.Updater(
      'vId' + violation_id,
      '<%= ApplicationController.root_context -%>/reviews/display_violation/' + violation_id,
      {
        asynchronous:true,
        evalScripts:true
      });
    return false;
  }

  // show the form to comment violation
  function sCF(violation_id) {
    new Ajax.Updater('reviewForm' + violation_id,
      '<%= ApplicationController.root_context -%>/reviews/violation_comment_form/' + violation_id,
      {
        asynchronous:true,
        evalScripts:true,
        onComplete:function (request) {
          $('vBody' + violation_id).remove();
          $('reviewForm' + violation_id).show();
          $('commentText' + violation_id).focus();
        }
      });
    return false;
  }

  // show the form to change severity
  function sCSF(violation_id) {
    new Ajax.Updater('reviewForm' + violation_id,
      '<%= ApplicationController.root_context -%>/reviews/violation_change_severity_form/' + violation_id,
      {
        asynchronous:true,
        evalScripts:true,
        onComplete:function (request) {
          $('vBody' + violation_id).remove();
          $('reviewForm' + violation_id).show();
          $('selectSeverity' + violation_id).focus();
        }
      });
    return false;
  }

  // show the form to change status
  function sCStF(violation_id) {
    new Ajax.Updater('reviewForm' + violation_id,
      '<%= ApplicationController.root_context -%>/reviews/violation_change_status_form/' + violation_id,
      {
        asynchronous:true,
        evalScripts:true,
        onComplete:function (request) {
          $('vBody' + violation_id).remove();
          $('reviewForm' + violation_id).show();
          $('commentText' + violation_id).focus();
        }
      });
    return false;
  }

  // show the form to flag as false-positive
  function sFPF(violation_id) {
    new Ajax.Updater('reviewForm' + violation_id,
      '<%= ApplicationController.root_context -%>/reviews/violation_false_positive_form/' + violation_id,
      {
        asynchronous:true,
        evalScripts:true,
        onComplete:function (request) {
          $('vBody' + violation_id).remove();
          $('reviewForm' + violation_id).show();
          $('commentText' + violation_id).focus();
        }
      });
    return false;
  }

  // show the form to assign violation
  function sAF(violation_id) {
    new Ajax.Updater('reviewForm' + violation_id,
      '<%= ApplicationController.root_context -%>/reviews/violation_assign_form/' + violation_id,
      {
        asynchronous:true,
        evalScripts:true,
        onComplete:function (request) {
          $('vBody' + violation_id).remove();
          $('reviewForm' + violation_id).show();
          $('assignee_login').focus();
        }
      });
    return false;
  }

  // show the form to create violation
  function sVF(resource, line, gray_colspan, white_colspan) {
    row = $('createViolationForm' + line);
    if (row == null) {
      new Ajax.Updater(
        'pos' + line,
        '<%= ApplicationController.root_context -%>/resource/show_create_violation_form',
        {
          parameters:{resource:resource, line:line, gray_colspan:gray_colspan, white_colspan:white_colspan},
          asynchronous:true,
          evalScripts:true,
          insertion:'after'
        });
    }
    return false;
  }

  // hide review form
  function hVF(line) {
    row = $('createViolationRow' + line);
    if (row != null) {
      row.remove();
    }
    return false;
  }
</script>