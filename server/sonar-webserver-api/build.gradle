description = 'SonarQube WebServer internal APIs, used by other Web Server modules or Core Extensions'

sonarqube {
  properties {
    property 'sonar.projectName', "${projectTitle} :: WebServer :: API"
  }
}

sourceSets {
  test {
    resources {
      srcDirs += ['src/test/projects']
    }
  }
}

configurations {
  tests

  testCompile.extendsFrom tests
}

dependencies {
  // please keep the list grouped by configuration and ordered by name

  compile 'com.google.guava:guava'
  compile 'io.jsonwebtoken:jjwt-api'
  compile 'io.jsonwebtoken:jjwt-impl'
  compile project(':sonar-core')
  compile project(':server:sonar-db-dao')
  compile project(':server:sonar-process')
  compile project(':server:sonar-server-common')
  compile project(path: ':sonar-plugin-api', configuration: 'shadow')
  compile project(':sonar-plugin-api-impl')
  compile 'org.mindrot:jbcrypt'

  compileOnly 'com.google.code.findbugs:jsr305'
  compileOnly 'javax.servlet:javax.servlet-api'

  testCompile 'org.assertj:assertj-guava'
  testCompile 'com.google.code.findbugs:jsr305'
  testCompile 'com.tngtech.java:junit-dataprovider'
  testCompile 'javax.servlet:javax.servlet-api'
  testCompile 'org.mockito:mockito-core'
  testCompile project(':server:sonar-db-testing')
  testCompile project(path: ":server:sonar-server-common", configuration: "tests")
  testCompile project(':sonar-testing-harness')
}

task testJar(type: Jar) {
  classifier = 'tests'
  from sourceSets.test.output
}

artifacts {
  tests testJar
}
