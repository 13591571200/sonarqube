sonarqube {
  properties {
    property "sonar.projectName", "${projectTitle} :: VSTS"
    property "sonar.sources", "src/main/js"
    property "sonar.tests", "src/main/js"
    property "sonar.test.inclusions", "src/main/js/**/__tests__/**"
    property "sonar.exclusions", "src/main/js/libs/third-party/**/*,src/main/js/**/__tests__/**"
  }
}

apply plugin: 'com.moowork.node'

node {
  version = '8.10.0'
  yarnVersion = '1.5.1'
  download = true
}

yarn_run {
  inputs.dir('config')
  inputs.dir('public')
  inputs.dir('scripts')
  inputs.dir('src')
  inputs.file('.babelrc')
  inputs.file('package.json')
  inputs.file('tsconfig.json')
  inputs.file('yarn.lock')
  outputs.dir('build/webapp')

  args = ['build']
}

yarn_run.dependsOn ':server:sonar-web:yarn_run'

def sources = fileTree(dir: "src") + fileTree(dir: "scripts") + fileTree(dir: "config")

task licenseCheckWeb(type: com.hierynomus.gradle.license.tasks.LicenseCheck) {
  source = sources
}
licenseMain.dependsOn licenseCheckWeb

task licenseFormatWeb(type: com.hierynomus.gradle.license.tasks.LicenseFormat) {
  source = sources
}
licenseFormat.dependsOn licenseFormatWeb
