<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.core.rule.RuleMapper">

  <sql id="selectColumns">
    id,
    plugin_rule_key as "ruleKey",
    plugin_name as "repositoryKey",
    description,
    status,
    name,
    plugin_config_key as "configKey",
    priority as "severity",
    cardinality,
    language as "language",
    parent_id as "parentId",
    note_data as "noteData",
    note_user_login as "noteUserLogin",
    note_created_at as "noteCreatedAt",
    note_updated_at as "noteUpdatedAt",
    characteristic_id as "characteristicId",
    default_characteristic_id as "defaultCharacteristicId",
    remediation_function as "remediationFunction",
    default_remediation_function as "defaultRemediationFunction",
    remediation_factor as "remediationFactor",
    default_remediation_factor as "defaultRemediationFactor",
    remediation_offset as "remediationOffset",
    default_remediation_offset as "defaultRemediationOffset",
    effort_to_fix_l10n_key as "effortToFixL10nKey",
    created_at as "createdAt",
    updated_at as "updatedAt"
  </sql>

  <select id="selectAll" resultType="Rule">
    select <include refid="selectColumns"/> from rules
  </select>

  <select id="selectEnablesAndNonManual" resultType="Rule">
    select <include refid="selectColumns"/> from rules
    <where>
      and status != 'REMOVED'
      and plugin_name != 'manual'
    </where>
  </select>

  <select id="selectById" parameterType="Integer" resultType="Rule">
    select <include refid="selectColumns"/> from rules WHERE id=#{id}
  </select>

  <select id="selectByName" parameterType="String" resultType="Rule">
    select <include refid="selectColumns"/> from rules WHERE name=#{name}
  </select>

  <select id="selectNonManual" resultType="Rule">
    select <include refid="selectColumns"/> from rules
    where plugin_name != 'manual'
  </select>

  <select id="selectByCharacteristicOrSubCharacteristicId" resultType="Rule">
    select <include refid="selectColumns"/> from rules
    <where>
      and characteristic_id in (select c.id from characteristics c where (c.id=#{id} or c.parent_id=#{id}) and c.enabled=${_true})
      and status!='REMOVED'
    </where>
  </select>

  <update id="update" parameterType="Rule">
    UPDATE rules SET
    plugin_rule_key=#{ruleKey},
    plugin_name=#{repositoryKey},
    description=#{description},
    status=#{status},
    name=#{name},
    plugin_config_key=#{configKey},
    priority=#{severity},
    cardinality=#{cardinality},
    language=#{language},
    parent_id=#{parentId},
    note_data=#{noteData},
    note_user_login=#{noteUserLogin},
    note_created_at=#{noteCreatedAt},
    note_updated_at=#{noteUpdatedAt},
    characteristic_id=#{characteristicId},
    default_characteristic_id=#{defaultCharacteristicId},
    remediation_function=#{remediationFunction},
    default_remediation_function=#{defaultRemediationFunction},
    remediation_factor=#{remediationFactor},
    default_remediation_factor=#{defaultRemediationFactor},
    remediation_offset=#{remediationOffset},
    default_remediation_offset=#{defaultRemediationOffset},
    effort_to_fix_l10n_key=#{effortToFixL10nKey},
    updated_at=#{updatedAt}
    WHERE id=#{id}
  </update>

  <sql id="insertColumns">
    (plugin_rule_key, plugin_name, description, status, name, plugin_config_key, priority, cardinality, language, parent_id,
    characteristic_id, default_characteristic_id, remediation_function, default_remediation_function,
    remediation_factor, default_remediation_factor, remediation_offset, default_remediation_offset,
    effort_to_fix_l10n_key,
    created_at, updated_at)
  </sql>

  <insert id="insert" parameterType="Rule" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
    insert into rules <include refid="insertColumns"/>
    values (#{ruleKey}, #{repositoryKey}, #{description}, #{status}, #{name}, #{configKey},
      #{severity}, #{cardinality}, #{language}, #{parentId},
      #{characteristicId}, #{defaultCharacteristicId}, #{remediationFunction}, #{defaultRemediationFunction},
      #{remediationFactor}, #{defaultRemediationFactor}, #{remediationOffset}, #{defaultRemediationOffset},
      #{effortToFixL10nKey},
      #{createdAt}, #{updatedAt})
  </insert>

  <insert id="batchInsert" parameterType="Rule" useGeneratedKeys="false">
    insert into rules <include refid="insertColumns"/>
    values (#{ruleKey}, #{repositoryKey}, #{description}, #{status}, #{name}, #{configKey},
    #{severity}, #{cardinality}, #{language}, #{parentId},
    #{characteristicId}, #{defaultCharacteristicId}, #{remediationFunction}, #{defaultRemediationFunction},
    #{remediationFactor}, #{defaultRemediationFactor}, #{remediationOffset}, #{defaultRemediationOffset},
    #{effortToFixL10nKey},
    #{createdAt}, #{updatedAt})
  </insert>

  <delete id="deleteParams" parameterType="Integer" >
    delete from active_rule_parameters where rules_parameter_id=#{id}
  </delete>

  <sql id="paramColumns">
    id, rule_id as "ruleId", name, param_type as "type", default_value as "defaultValue", description
  </sql>

  <select id="selectAllParams" resultType="RuleParam">
    select <include refid="paramColumns"/>
    from rules_parameters
  </select>

  <select id="selectParamsForRule" resultType="RuleParam">
    select <include refid="paramColumns"/>
    from rules_parameters
    where rule_id=#{id}
  </select>

  <select id="selectParamByRuleAndKey" resultType="RuleParam">
    SELECT <include refid="paramColumns"/>
    FROM rules_parameters
    <where>
      AND rule_id=#{ruleId}
      AND name=#{key}
    </where>
  </select>

  <delete id="deleteParameter" parameterType="Integer">
    delete from rules_parameters where id=#{id}
  </delete>

  <insert id="insertParameter" parameterType="RuleParam" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO rules_parameters (rule_id, name, param_type, default_value, description)
    VALUES (#{ruleId}, #{name}, #{type}, #{defaultValue}, #{description})
  </insert>

  <update id="updateParameter" parameterType="RuleParam">
    UPDATE rules_parameters SET
      name=#{name},
      param_type=#{type},
      default_value=#{defaultValue},
      description=#{description}
    WHERE id=#{id}
  </update>

  <sql id="tagColumns">
    rrt.id, rrt.rule_id as "ruleId", rrt.rule_tag_id as "tagId", rrt.tag_type as "type", rt.tag
  </sql>

  <select id="selectAllTags" resultType="RuleRuleTag">
    SELECT <include refid="tagColumns"/>
    FROM rules_rule_tags rrt
    JOIN rule_tags rt ON rrt.rule_tag_id = rt.id
  </select>

  <select id="selectTagsForRule" resultType="RuleRuleTag">
    select <include refid="tagColumns"/>
    FROM rules_rule_tags rrt
    JOIN rule_tags rt ON rrt.rule_tag_id = rt.id
    WHERE rrt.rule_id=#{id}
  </select>

  <insert id="insertTag" parameterType="RuleRuleTag" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO rules_rule_tags (rule_id, rule_tag_id, tag_type)
    VALUES (#{ruleId}, #{tagId}, #{type})
  </insert>

  <update id="updateTag" parameterType="RuleRuleTag">
    UPDATE rules_rule_tags
    SET tag_type=#{type}
    WHERE id=#{id}
  </update>

  <update id="deleteTag" parameterType="Integer">
    DELETE FROM rules_rule_tags WHERE id=#{tagId}
  </update>

</mapper>

