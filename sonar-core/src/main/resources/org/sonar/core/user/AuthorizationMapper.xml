<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.core.user.AuthorizationMapper">

  <select id="keepAuthorizedComponentIdsForUser" parameterType="map" resultType="int">
    SELECT s.project_id
    FROM group_roles gr, snapshots s
    WHERE
      gr.role=#{role}
      and (gr.group_id is null or gr.group_id in (select gu.group_id from groups_users gu where gu.user_id=#{userId}))
      and gr.resource_id = s.root_project_id and
      <foreach collection="componentIds" open="project_id in (" close=")" item="list" separator=") or project_id in (" >
        <foreach collection="list" item="element" separator=",">
          #{element}
        </foreach>
      </foreach>

      and s.islast = ${_true}
    UNION
    SELECT s.project_id
    FROM user_roles ur, snapshots s
    WHERE
      ur.role=#{role}
      and ur.user_id=#{userId} and
      <foreach collection="componentIds" open="s.project_id in (" close=")" item="list" separator=") or s.project_id in (" >
        <foreach collection="list" item="element" separator=",">
          #{element}
        </foreach>
      </foreach>
      and s.islast = ${_true}
  </select>

  <select id="keepAuthorizedComponentIdsForAnonymous" parameterType="map" resultType="int">
      SELECT s.project_id
      FROM group_roles gr, snapshots s
      WHERE
        gr.role=#{role}
        and gr.group_id is null
        and gr.resource_id = s.root_project_id and
        <foreach collection="componentIds" open="s.project_id in (" close=")" item="list" separator=") or s.project_id in (" >
          <foreach collection="list" item="element" separator=",">
            #{element}
          </foreach>
        </foreach>
  </select>

  <select id="selectAuthorizedRootProjectsIds" parameterType="map" resultType="int">
    <include refid="selectAuthorizedRootProjectsIdsQuery" />
  </select>

  <sql id="selectAuthorizedRootProjectsIdsQuery">
    <choose>
      <when test="userId != null">
        SELECT s.root_project_id
        FROM group_roles gr, snapshots s
        WHERE
        gr.role=#{role}
        and (gr.group_id is null or gr.group_id in (select gu.group_id from groups_users gu where gu.user_id=#{userId}))
        and gr.resource_id = s.root_project_id
        and s.islast = ${_true}
        UNION
        SELECT s.root_project_id
        FROM user_roles ur, snapshots s
        WHERE
        ur.role=#{role}
        and ur.user_id=#{userId} and s.project_id=ur.resource_id
        and s.islast = ${_true}
        group by s.root_project_id
      </when>
      <otherwise>
        SELECT s.root_project_id
        FROM group_roles gr, snapshots s
        WHERE
        gr.role=#{role}
        and gr.group_id is null
        and gr.resource_id = s.root_project_id
        group by s.root_project_id
      </otherwise>
    </choose>
  </sql>

</mapper>
