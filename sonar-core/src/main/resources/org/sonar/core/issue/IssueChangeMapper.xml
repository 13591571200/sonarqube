<?xml version="1.0" encoding="UTF-8" ?>

<!--
  ~ SonarQube, open source software quality management tool.
  ~ Copyright (C) 2008-2013 SonarSource
  ~ mailto:contact AT sonarsource DOT com
  ~
  ~ SonarQube is free software; you can redistribute it and/or
  ~ modify it under the terms of the GNU Lesser General Public
  ~ License as published by the Free Software Foundation; either
  ~ version 3 of the License, or (at your option) any later version.
  ~
  ~ SonarQube is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this program; if not, write to the Free Software Foundation,
  ~ Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mappei.dtd">

<mapper namespace="org.sonar.core.issue.IssueChangeMapper">

  <sql id="issueChangeColumns">
    i.id,
    i.issue_key as issueKey,
    i.user_login as userLogin,
    i.change_type as changeType,
    i.change_data as changeData,
    i.message as message,
    i.created_at as createdAt,
    i.updated_at as updatedAt
  </sql>

  <insert id="insert" parameterType="IssueChange" useGeneratedKeys="true" keyProperty ="id">
    INSERT INTO issue_changes (issue_key, user_login, change_type, change_data, message, created_at, updated_at)
    VALUES (#{issueKey}, #{userLogin}, #{changeType}, #{changeData}, #{message}, #{createdAt}, #{updatedAt})
  </insert>

  <!-- Oracle -->
  <insert id="insert" databaseId="oracle" parameterType="IssueChange" keyColumn="id" useGeneratedKeys="true" keyProperty ="id">
    <selectKey order="BEFORE" resultType="Long" keyProperty="id" >
      select issue_changes_seq.NEXTVAL from DUAL
    </selectKey>
    INSERT INTO issue_changes (id, issue_key, user_login, change_type, change_data, message, created_at, updated_at)
    VALUES (#{id}, #{issueKey}, #{userLogin}, #{changeType}, #{changeData}, #{message}, #{createdAt}, #{updatedAt})
  </insert>

  <select id="findById" parameterType="long" resultType="IssueChange">
    select <include refid="issueChangeColumns"/>
    from issue_changes i
    where i.id=#{id}
  </select>

  <select id="selectByIssue" parameterType="string" resultType="IssueChange">
    select <include refid="issueChangeColumns"/>
    from issue_changes i
    where i.issue_key=#{issueKey}
  </select>

</mapper>

