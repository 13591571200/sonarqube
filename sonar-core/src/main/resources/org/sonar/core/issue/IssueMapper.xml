<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mappei.dtd">

<mapper namespace="org.sonar.core.issue.IssueMapper">

  <sql id="issueColumns">
    i.id,
    i.uuid as uuid,
    i.resource_id as resourceId,
    i.rule_id as ruleId,
    i.severity as severity,
    i.manual_severity as manualSeverity,
    i.manual_issue as manualIssue,
    i.title as title,
    i.message as message,
    i.line as line,
    i.cost as cost,
    i.status as status,
    i.resolution as resolution,
    i.checksum as checksum,
    i.user_login as userLogin,
    i.assignee_login as assigneeLogin,
    i.person_id as personId,
    i.data as data,
    i.created_at as createdAt,
    i.updated_at as updatedAt,
    i.closed_at as closedAt
  </sql>

  <insert id="insert" parameterType="Issue" useGeneratedKeys="true" keyProperty ="id">
    INSERT INTO issues (uuid, resource_id, rule_id, severity, manual_severity, manual_issue, title, message, line, cost, status,
    resolution, checksum, user_login, assignee_login, person_id, data, created_at, updated_at, closed_at)
    VALUES (#{uuid}, #{resourceId}, #{ruleId}, #{severity}, #{manualSeverity}, #{manualIssue}, #{title}, #{message}, #{line}, #{cost}, #{status},
    #{resolution}, #{checksum}, #{userLogin}, #{assigneeLogin}, #{personId}, #{data}, #{createdAt}, #{updatedAt}, #{closedAt})
  </insert>

  <!-- Oracle -->
  <insert id="insert" databaseId="oracle" parameterType="Issue" keyColumn="id" useGeneratedKeys="true" keyProperty ="id">
    <selectKey order="BEFORE" resultType="Long" keyProperty="id" >
      select issues_seq.NEXTVAL from DUAL
    </selectKey>
    INSERT INTO issues (id, uuid, resource_id, rule_id, severity, manual_severity, manual_issue, title, message, line, cost, status,
    resolution, checksum, user_login, assignee_login, person_id, data, created_at, updated_at, closed_at)
    VALUES (#{id}, #{uuid}, #{resourceId}, #{ruleId}, #{severity}, #{manualSeverity}, #{manualIssue}, #{title}, #{message}, #{line}, #{cost}, #{status},
    #{resolution}, #{checksum}, #{userLogin}, #{assigneeLogin}, #{personId}, #{data}, #{createdAt}, #{updatedAt}, #{closedAt})
  </insert>

  <update id="update" parameterType="Issue">
    update issues set
    uuid=#{uuid},
    resource_id=#{resourceId},
    rule_id=#{ruleId},
    severity=#{severity},
    manual_severity=#{manualSeverity},
    manual_issue=#{manualIssue},
    title=#{title},
    message=#{message},
    line=#{line},
    cost=#{cost},
    status=#{status},
    resolution=#{resolution},
    checksum=#{checksum},
    user_login=#{userLogin},
    assignee_login=#{assigneeLogin},
    person_id=#{personId},
    data=#{data},
    created_at=#{createdAt},
    updated_at=#{updatedAt},
    closed_at=#{closedAt}
    where id = #{id}
  </update>

  <select id="findById" parameterType="long" resultType="Issue">
    select <include refid="issueColumns"/>
    from issues i
    where i.id=#{id}
  </select>

  <select id="findByUuid" parameterType="String" resultType="Issue">
    select <include refid="issueColumns"/>
    from issues i
    where i.uuid=#{uuid}
  </select>

  <select id="select" parameterType="map" resultType="Issue">
    select <include refid="issueColumns"/> from issues i
    <if test="componentKeys.size() > 0">
      , projects p, snapshots root, snapshots s
    </if>
    <where>
      <if test="componentKeys.size() > 0">
        and p.enabled=${_true}
        and p.kee in
        <foreach item="componentKey" index="index" collection="componentKeys" open="(" separator="," close=")">#{componentKey}
        </foreach>
        and root.project_id=p.id
        and root.islast=${_true}
        and (s.id=root.id or (s.root_snapshot_id=root.id and
        <choose>
          <when test="_databaseId == 'mssql'">
            s.path LIKE root.path + root.id + '.%'
          </when>
          <otherwise>
            s.path LIKE root.path || root.id || '.%'
          </otherwise>
        </choose>
        ))
        and s.islast=${_true}
        and i.resource_id=s.project_id
      </if>

      <if test="severity != null">
        and i.severity=#{severity}
      </if>
      <if test="status != null">
        and i.status=#{status}
      </if>
      <if test="resolution != null">
        and i.resolution=#{resolution}
      </if>
      <if test="userLogin != null">
        and i.user_login=#{userLogin}
      </if>
      <if test="assigneeLogin != null">
        and i.assignee_login=#{assigneeLogin}
      </if>
    </where>
  </select>

</mapper>

